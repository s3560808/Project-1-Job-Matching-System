@model iUni_Workshop.Models.EmployerModels.EditCompanyInfo
@{
    ViewBag.Title = "title";
    Layout = "_Layout";
}
@await Html.PartialAsync("Shared/_Validation_Area_From_Backend")
<script>
function GetSuburbName(str) {
        var suburbselectbox = document.getElementById("SurburbNameList");
        var xmlhttp = new XMLHttpRequest();
        xmlhttp.onreadystatechange = function () {
            if (this.readyState == 4 && this.status == 200) {
                var suburbs = JSON.parse(this.responseText);
                suburbselectbox.innerHTML="";
                for (var i = 0; i < suburbs.length; i++) {
                    var btn = document.createElement("OPTION");
                    btn.value = suburbs[i];
                    if (str == suburbs[i]) {
                        getPostCode(str);
                    }
                    suburbselectbox.appendChild(btn);
                }
            }
        };
        xmlhttp.open("GET", "/Suburb/GetSuburb/" + str, true);
        xmlhttp.send();
    }

    function getPostCode(suburbName) {
        var postcodeselectbox = document.getElementById("PostCodeList");
        postcodeselectbox.innerHTML = "";
        var xmlhttp = new XMLHttpRequest();
        xmlhttp.onreadystatechange = function () {
            if (this.readyState == 4 && this.status == 200) {
                var postCodes = JSON.parse(this.responseText);
                for (var i = 0; i < postCodes.length; i++) {
                    var postcode = document.createElement("OPTION");
                    postcode.value = postCodes[i];
                    postcodeselectbox.appendChild(postcode);
                }
            }
        };
        xmlhttp.open("GET", "/Suburb/GetPostCode/" + suburbName, true);
        xmlhttp.send();
    }

    function Name_ABN_Warning(){
        window.alert("You are certificated. ABN/Name cannot be changed");
    }

    function Check(){
        if(@Model.Certificated.ToString().ToLower()){
            var elements = document.getElementsByClassName("CoreInfo");
            for(i = 0; i< elements.length; ++i){
                elements[i].setAttribute("readonly",true);
                elements[i].setAttribute("onkeypress","Name_ABN_Warning()");
            }
        }
    }
</script>
<body onload="Check()"></body>
<h2>title</h2>
<form method="post" asp-action="EditCompanyInfoAction">
    @Html.DisplayNameFor(model => model.Name)
    @{
        string name = "";
        bool readOnlyFlag = Model.Certificated;
        if (Model.Name != null)
        {
            name = @Model.Name;
        }
        <input type="text" name="Name" value="@name" class="CoreInfo">
    }

    <br />
    @Html.DisplayNameFor(model => model.PhoneNumber)
    @{
        string phoneNumber = "";
        if (Model.PhoneNumber != null)
        {
            phoneNumber = @Model.PhoneNumber;
        }
        <input type="text" name="PhoneNumber" value="@phoneNumber">
    }

    <br />
    @Html.DisplayNameFor(model => model.ContactEmail)
    @{
        string email = "";
        if (Model.ContactEmail != null)
        {
            email = @Model.ContactEmail;
        }
        <input type="text" name="ContactEmail" value="@email">
    }
    <br />

    @Html.DisplayNameFor(model => model.Address)
    @{
        string address = "";
        if (Model.Address != null)
        {
            address = @Model.Address;
        }
        <input type="text" name="Address" value="@address">
    }
    <br />

    @Html.DisplayNameFor(model => model.BriefDescription)
    @{
        string briefDescription = "";
        if (Model.BriefDescription != null)
        {
            briefDescription = @Model.BriefDescription;
        }
        <textarea name="BriefDescription">@briefDescription</textarea>
    }
    <br />

    @Html.DisplayNameFor(model => model.PostCode)
    @{
        string postcode = "";
        if (Model.PostCode != null)
        {
            postcode = @Model.PostCode.ToString();
        }
        <input type="text" name="PostCode" value="@postcode" list="PostCodeList">
        <datalist id="PostCodeList"></datalist>
    }
    <br />

    @Html.DisplayNameFor(model => model.SuburbName)
    @{
        string suburbName = "";
        if (Model.SuburbName != null)
        {
            suburbName = @Model.SuburbName;
        }
        <input type="text" name="SuburbName" value="@suburbName" list="SurburbNameList" onkeyup="GetSuburbName(this.value)">
        <datalist id="SurburbNameList"></datalist>
    }
    <br />

    @Html.DisplayNameFor(model => model.ABN)
    @{
        string abn = "";
        if (Model.ABN != null)
        {
            abn = @Model.ABN;
        }
        <input type="text" name="ABN" value="@abn" class="CoreInfo">
    }
    <br />

    <button type="submit">Submit</button>
</form>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}
