@using Microsoft.EntityFrameworkCore
@model iUni_Workshop.Models.EmployeeModels.EditPersonalInfo

@{
ViewBag.Title = "title";
Layout = "_Layout";
}

<link rel="stylesheet" href="~/css/ejp.css"/>


@await Html.PartialAsync("Shared/_Validation_Area_From_Backend")
<script>
    function GetSuburbName(str) {
        var suburbselectbox = document.getElementById("SurburbNameList");
        var xmlhttp = new XMLHttpRequest();
        xmlhttp.onreadystatechange = function () {
            if (this.readyState == 4 && this.status == 200) {
                var suburbs = JSON.parse(this.responseText);
                suburbselectbox.innerHTML="";
                for (var i = 0; i < suburbs.length; i++) {
                    var btn = document.createElement("OPTION");
                    btn.value = suburbs[i];
                    if (str == suburbs[i]) {
                        getPostCode(str);
                    }
                    suburbselectbox.appendChild(btn);
                }
            }
        };
        xmlhttp.open("GET", "/Suburb/GetSuburb/" + str, true);
        xmlhttp.send();
    }
    
    function getPostCode(suburbName) {
        var postcodeselectbox = document.getElementById("PostCodeList");
        postcodeselectbox.innerHTML = "";
        var xmlhttp = new XMLHttpRequest();
        xmlhttp.onreadystatechange = function () {
            if (this.readyState == 4 && this.status == 200) {
                var postCodes = JSON.parse(this.responseText);
                for (var i = 0; i < postCodes.length; i++) {
                    var postcode = document.createElement("OPTION");
                    postcode.value = postCodes[i];
                    postcodeselectbox.appendChild(postcode);
                }
            }
        };
        xmlhttp.open("GET", "/Suburb/GetPostCode/" + suburbName, true);
        xmlhttp.send();
    }
    
    function getSchoolName(schoolName) {
        var schoolSelectBox = document.getElementById("schoolList");
        var xmlHttp = new XMLHttpRequest();
        xmlHttp.onreadystatechange = function () {
            if (this.readyState == 4 && this.status == 200) {
                var suburbs = JSON.parse(this.responseText);
                schoolSelectBox.innerHTML="";
                for (var i = 0; i < suburbs.length; i++) {
                    var btn = document.createElement("OPTION");
                    btn.value = suburbs[i];
                    if (schoolName == suburbs[i]) {
                        getSchoolSuburb(schoolName);
                    }
                    schoolSelectBox.appendChild(btn);
                }
            }
        };
        xmlHttp.open("GET", "/School/GetSchoolName/" + schoolName, true);
        xmlHttp.send();
    }
    
    function getSchoolSuburb(schoolName) {
        var schoolSelectBox = document.getElementById("campusList");
        var xmlHttp = new XMLHttpRequest();
        xmlHttp.onreadystatechange = function () {
            if (this.readyState == 4 && this.status == 200) {
                var suburbs = JSON.parse(this.responseText);
                schoolSelectBox.innerHTML="";
                for (var i = 0; i < suburbs.length; i++) {
                    var btn = document.createElement("OPTION");
                    btn.value = suburbs[i].suburbName;
                    schoolSelectBox.appendChild(btn);
                }
            }
        };
        xmlHttp.open("GET", "/School/GetCampus/" + schoolName, true);
        xmlHttp.send();
    }
    
    function getSchoolPostCode(suburbName) {
        var schoolName = document.getElementById("SchoolName").value;
        var postCode = document.getElementById("CampusPostCode");
        var xmlHttp = new XMLHttpRequest();
        xmlHttp.onreadystatechange = function () {
            if (this.readyState == 4 && this.status == 200) {
                var suburbs = JSON.parse(this.responseText);
                for (var i = 0; i < suburbs.length; i++) {
                    var btn = document.createElement("OPTION");
                    btn.value = suburbs[i].suburbName;
                    if (suburbName == suburbs[i].suburbName) {
                        postCode.value = suburbs[i].postCode;
                    }
//                    schoolSelectBox.appendChild(btn);
                }
            }
        };
        xmlHttp.open("GET", "/School/GetCampus/" + schoolName, true);
        xmlHttp.send();
    }

</script>

@await Html.PartialAsync("Shared/_Validation_Area_From_Backend")

<div id="epi">
    <h2>Edit Personal Info</h2>
    <form method="post" asp-action="EditPersonalInfoAction">
        <p> @Html.DisplayNameFor(model => model.Name):
        @{
            string name = "";
            if (Model.Name != null)
            {
                name = @Model.Name;
            }
            <input class="btn1" type="text" name="Name" value="@name"
                   @{}>
        }
        </p>
        <hr>

        <p> @Html.DisplayNameFor(model => model.PhoneNumber):
        @{
            string phoneNumber = "";
            if (Model.PhoneNumber != null)
            {
                phoneNumber = @Model.PhoneNumber;
            }
            <input class="btn1" type="text" name="PhoneNumber" value="@phoneNumber">
        }
        </p>
        <hr/>

        <p> @Html.DisplayNameFor(model => model.ContactEmail):
        @{
            string email = "";
            if (Model.ContactEmail != null)
            {
                email = @Model.ContactEmail;
            }
            <input class="btn1" type="text" name="ContactEmail" value="@email">
        }
        </p>
        <hr/>

        <p>
            <div class="row">
                <div class="col-md-3">
                    @Html.DisplayNameFor(model => model.CampusName):
                </div>
                
                <div class="col-md-3">
                    Location:
                </div>
                
                <div class="col-md-3">
                    Postcode:
                </div>
                
            </div>
            @{
                var schoolName = "";
                var campusName = "";
                int? campusPostCode = null;
                if (Model.CampusName != null)
                {
                    schoolName = @Model.SchoolName;
                    campusName = @Model.CampusName;
                    campusPostCode = @Model.CampusPostCode;
                }
                <div class="row">
                    <div class="col-md-3">
                        <input class="btn1" type="text" name="SchoolName" value="@schoolName" id="SchoolName" list="schoolList" onkeyup="getSchoolName(this.value)">
                        <datalist id="schoolList"></datalist>
                    </div>
                    <div class="col-md-3">
                        <input class="btn1" type="text" name="CampusName" value="@campusName" id="CampusName" list="campusList" onkeyup="getSchoolPostCode(this.value)">
                        <datalist id="campusList"></datalist>
                    </div>
                    <div class="col-md-3">
                        <input class="btn1" type="text" name="CampusPostCode" value="@campusPostCode" id="CampusPostCode">
                        <datalist id="campusPostCodeList"></datalist>
                    </div>
                </div>
            }
        </p>
        <hr/>
        
        <p>
            <div class="row">
                <div class="col-md-3">
                    @Html.DisplayNameFor(model => model.LivingDistrict):
                </div>
                <div class="col-md-3">
                    Postcode:
                </div>
            </div>
            
            @{
                string LivingDistrict = "";
                int? postCode = null;
                if (Model.LivingDistrict != null)
                {
                    LivingDistrict = @Model.LivingDistrict;
                    postCode = Model.PostCode;
                }
                
                <div class="row">
                    <div class="col-md-3">
                    <input class="btn1" type="text" name="LivingDistrict" id="LivingDistrict" list="SurburbNameList" onkeyup="GetSuburbName(this.value)" value="@LivingDistrict">
                        <datalist id="SurburbNameList">
                        </datalist>
                    </div>
                    
                    <div class="col-md-3">
                    <input class="btn1" type="text" name="PostCode" id="PostCode" list="PostCodeList" value="@postCode">
                        <datalist id="PostCodeList">
                        </datalist>
                    </div>
                </div>
            }



        </p>

        <hr/>

        <p>@Html.DisplayNameFor(model => model.ShortDescription):
        @{
            string description = "";
            if (Model.ShortDescription != null)
            {
                description = @Model.ShortDescription;
            }

            <input class="btn1" type="text" name="ShortDescription" value="@description">
        }

        </p><hr/>
        <button type="submit">Submit</button>
    </form>

    @section Scripts {
        @await Html.PartialAsync("_ValidationScriptsPartial")
    }

</div>